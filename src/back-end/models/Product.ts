import mongoose, { Schema, Document, Model, Types } from "mongoose";

/**
 * TODO:
 * Define Product interface
 * _id, name, description, category, price, stock, imageUrl?
 */
export interface IProduct extends Document {
  _id: Types.ObjectId;
  name: string;
  description: string;
  category: string;
  price: number;
  stock: number;
  imageUrl?: string;
}

/**
 * TODO:
 * Design Product Schema
 * 1. _id: auto generated by mongoose
 * 2. name: should be unique and trimmed
 * 3. description: should be required
 * 4. category: should be one of the predefined categories
 * 5. price: should be a positive number
 * 6. stock: should be a non-negative integer
 * 7. imageUrl: optional, should be trimmed
 */
const ProductSchema: Schema<IProduct> = new Schema(
  {
    name: {
      type: String,
      required: true,
      unique: true,
      trim: true,
    },
    description: {
      type: String,
      required: true,
    },
    category: {
      type: String,
      enum: ["Electronics", "Clothing", "Books", "Home", "Others"],
      trim: true,
      required: true,
    },
    price: {
      type: Number,
      required: true,
    },
    stock: {
      type: Number,
      required: true,
      min: 0,
    },
    imageUrl: {
      type: String,
      default: null,
      trim: true,
    },
  },
  { timestamps: true }
);

// Export the model
const Product: Model<IProduct> = mongoose.model<IProduct>(
  "Product",
  ProductSchema
);
export default Product;
